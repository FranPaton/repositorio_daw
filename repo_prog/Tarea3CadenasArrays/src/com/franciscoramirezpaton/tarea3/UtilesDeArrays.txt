Métodos de la librería Arrays
-----------

sort(T[] a)

El método sort ordena un array de forma ascendente. Si pasamos un array de enteros, por ejemplo, los ordena numéricamente

int[] array = {2, 1, 4, 3, 5};
Arrays.sort(array) = {1, 2, 3, 4, 5}

----------

binarySearch(T[] a, T key)

El método bynarySearch busca un elemento key dentro de un array usando el algoritmo de busqueda binaria, por lo que el array debe estar ordenado

int[] array = {10,15,22,40,57};
int key1 = 3;
int key2 = 40;
Arrays.binarySearch(array, key) = -1;
Arrays.binarySearch(array, key) = 3;

----------

equals(T[] a, T[] a2)

El método equals comprueba si dos arrays son iguales. Dos arrays se consideran iguales si tienen el mismo tamaño y los mismos valores en cada posición

int[] array1 = {1,2,3,4,5};
int[] array2 = {5,4,3,2,1};
int[] array3 = {1,2,3,4};
Arrays.equals(array, array2) = false
Arrays.equals(array, array3) = false

----------

fill(T[] a, T val)

El método fill rellena todos los campos de un array con el mismo valor val 

int[] array = new int[5];
int val = 1;
Arrays.fill(array, val) = {1,1,1,1,1}

-----------

copyOf(T[] original, int newLength)

El método copyOf copia el array pasado con un nuevo tamaño, eliminando o rellenando con ceros dependiendo si el tamaño es menor o mayor que el original.

int[] array = {1,2,3,4,5};

Arrays.copyOf(array, 3) = {1,2,3}
Arrays.copyOf(array, 3) = {1,2,3,4,5,0,0}

-----------

toString(T[] a)

El método toString devuelve todos los valores del array concatenados en un String entre corchetes [], y separados por coma y espacio

int[] array1 = {1,2,3,4,5}
String[] array2 = {"Hola", "Mundo"};
Arrays.toString(array1) = "[1, 2, 3, 4, 5]";
Arrays.toString(array2) = "[Hola, Mundo]";
